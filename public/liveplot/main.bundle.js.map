{"version":3,"file":"main.bundle.js","mappings":"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","sources":["webpack:///webpack/runtime/chunk loaded","webpack:///./src/charts.ts","webpack:///./src/liveplot.ts","webpack:///./src/main.ts","webpack:///./src/utils.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/harmony module decorator","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import _, { last, sample } from 'lodash';\nimport { FileType, LiveplotDataType } from './types';\nimport { Utils } from './utils';\n\nconst colorMapJet = [\n  '#00008F',\n  '#00009F',\n  '#0000AF',\n  '#0000BF',\n  '#0000CF',\n  '#0000DF',\n  '#0000EF',\n  '#0000FF',\n  '#0010FF',\n  '#0020FF',\n  '#0030FF',\n  '#0040FF',\n  '#0050FF',\n  '#0060FF',\n  '#0070FF',\n  '#0080FF',\n  '#008FFF',\n  '#009FFF',\n  '#00AFFF',\n  '#00BFFF',\n  '#00CFFF',\n  '#00DFFF',\n  '#00EFFF',\n  '#00FFFF',\n  '#10FFEF',\n  '#20FFDF',\n  '#30FFCF',\n  '#40FFBF',\n  '#50FFAF',\n  '#60FF9F',\n  '#70FF8F',\n  '#80FF80',\n  '#8FFF70',\n  '#9FFF60',\n  '#AFFF50',\n  '#BFFF40',\n  '#CFFF30',\n  '#DFFF20',\n  '#EFFF10',\n  '#FFFF00',\n  '#FFEF00',\n  '#FFDF00',\n  '#FFCF00',\n  '#FFBF00',\n  '#FFAF00',\n  '#FF9F00',\n  '#FF8F00',\n  '#FF8000',\n  '#FF7000',\n  '#FF6000',\n  '#FF5000',\n  '#FF4000',\n  '#FF3000',\n  '#FF2000',\n  '#FF1000',\n  '#FF0000',\n  '#EF0000',\n  '#DF0000',\n  '#CF0000',\n  '#BF0000',\n  '#AF0000',\n  '#9F0000',\n  '#8F0000',\n  '#800000',\n];\n\nconst rtColorMap = [\n  '#ffe100',\n  '#ffc300',\n  '#ffa500',\n  '#ff6e00',\n  '#ff3700',\n  '#ff0000',\n  '#d5002b',\n  '#aa0055',\n  '#800080',\n  '#5500aa',\n  '#2b00d5',\n  '#0000ff',\n  '#002baa',\n  '#005555',\n  '#008000',\n];\n\nconst utils = new Utils();\n\nexport class Charts {\n  public elemObject: any;\n  public perfDataTable: google.visualization.DataTable;\n  public cumulDataTable: google.visualization.DataTable;\n  public xyPosDataTable: google.visualization.DataTable;\n  public rxnTimeDataTable: google.visualization.DataTable;\n  public rewardDataTable: google.visualization.DataTable;\n  public choiceDataTable: google.visualization.DataTable;\n  public objPerfDataTable: google.visualization.DataTable;\n  public realtimeDataTable: google.visualization.DataTable;\n  public healthDataTable: google.visualization.DataTable;\n\n  public perfDashboard: google.visualization.Dashboard;\n  public trialDashboard: google.visualization.Dashboard;\n  public healthDashboard: google.visualization.Dashboard;\n\n  public perfPlot: google.visualization.ChartWrapper;\n  public perfPlotConfig: google.visualization.ChartSpecs;\n  public perfPlotOptions: google.visualization.LineChartOptions;\n  public perfFilter: google.visualization.ControlWrapper;\n  public perfFilterConfig: google.visualization.ControlWrapperOptions;\n  public perfFilterOptions: Object;\n\n  public trialPlot: google.visualization.ChartWrapper;\n  public trialPlotConfig: google.visualization.ChartSpecs;\n  public trialPlotOptions: google.visualization.AreaChartOptions;\n  public trialFilter: google.visualization.ControlWrapper;\n  public trialFilterConfig: google.visualization.ControlWrapperOptions;\n  public trialFilterOptions: Object;\n\n  public healthPlot: google.visualization.ChartWrapper;\n  public healthPlotConfig: google.visualization.ChartSpecs;\n  public healthPlotOptions: google.visualization.ScatterChartOptions;\n  public healthFilter: google.visualization.ControlWrapper;\n  public healthFilterConfig: google.visualization.ControlWrapperOptions;\n  public healthFilterOptions: Object;\n\n  public screenPlot: google.visualization.ComboChart;\n  public screenPlotOptions: google.visualization.ComboChartOptions;\n\n  public realtimePlot: google.visualization.ChartWrapper;\n  public realtimePlotConfig: google.visualization.ChartSpecs;\n  public realtimePlotOptions: google.visualization.ComboChartOptions;\n  public realtimePlotActive: boolean;\n  public realtimeRowDataAdded: boolean;\n  public rtData: any;\n  public prevCoord: any;\n  public prevColorIdx: number;\n\n  public rxnPlot: google.visualization.Histogram;\n  public rxnPlotOptions: google.visualization.HistogramOptions;\n\n  public rewardPlot: google.visualization.ColumnChart;\n  public rewardPlotOptions: google.visualization.ColumnChartOptions;\n\n  public choicePlot: google.visualization.ColumnChart;\n  public choicePlotOptions: google.visualization.ColumnChartOptions;\n\n  public objPerfPlot: google.visualization.ColumnChart;\n  public objPerfPlotOptions: google.visualization.ColumnChartOptions;\n\n  private vitals: any;\n  private nTrials: number;\n\n  constructor(elemObj: any) {\n    this.elemObject = elemObj;\n    this.realtimePlotActive = false;\n    this.setupCharts();\n\n    this.vitals = {\n      subject: null,\n      pctCorrect: 0,\n      trials: 0,\n      time: 0,\n      batteryLeft: 0,\n      batteryUsed: 0,\n      rewardEstimate: 0,\n      automator: '',\n      automatorStage: 0,\n      automatorStageName: '',\n      numReward: 0,\n      rfidTag: '',\n      rfidTime: 0,\n      tagCount: {},\n    };\n\n    this.prevCoord = { x: 0, y: 0 };\n    this.prevColorIdx = 0;\n  }\n\n  public setupDataTables() {\n    this.perfDataTable = new google.visualization.DataTable();\n    this.healthDataTable = new google.visualization.DataTable();\n    this.cumulDataTable = new google.visualization.DataTable();\n    this.xyPosDataTable = new google.visualization.DataTable();\n    this.rxnTimeDataTable = new google.visualization.DataTable();\n    this.rewardDataTable = new google.visualization.DataTable();\n    this.choiceDataTable = new google.visualization.DataTable();\n    this.objPerfDataTable = new google.visualization.DataTable();\n    this.realtimeDataTable = new google.visualization.DataTable();\n    this.rtData = {};\n  }\n\n  public async setupCharts() {\n    await google.charts.load('50', { packages: ['corechart', 'controls'] });\n    this.setupChartOptions();\n    this.setupDataTables();\n\n    this.perfDashboard = new google.visualization.Dashboard(\n      this.elemObject.perfDiv\n    );\n    this.perfPlot = new google.visualization.ChartWrapper(this.perfPlotConfig);\n    this.perfFilter = new google.visualization.ControlWrapper(\n      this.perfFilterConfig\n    );\n\n    this.trialDashboard = new google.visualization.Dashboard(\n      this.elemObject.trialDiv\n    );\n    this.trialPlot = new google.visualization.ChartWrapper(\n      this.trialPlotConfig\n    );\n    this.trialFilter = new google.visualization.ControlWrapper(\n      this.trialFilterConfig\n    );\n\n    this.healthDashboard = new google.visualization.Dashboard(\n      this.elemObject.healthDiv\n    );\n    this.healthPlot = new google.visualization.ChartWrapper(\n      this.healthPlotConfig\n    );\n    this.healthFilter = new google.visualization.ControlWrapper(\n      this.healthFilterConfig\n    );\n\n    this.perfDashboard.bind(this.perfFilter, this.perfPlot);\n    this.trialDashboard.bind(this.trialFilter, this.trialPlot);\n    this.healthDashboard.bind(this.healthFilter, this.healthPlot);\n\n    this.screenPlot = new google.visualization.ComboChart(\n      this.elemObject.screenPlot\n    );\n    // this.realtimePlot = (\n    //   new google.visualization.ChartWrapper(this.realtimePlotConfig)\n    // );\n    this.rxnPlot = new google.visualization.Histogram(this.elemObject.rxnPlot);\n    this.rewardPlot = new google.visualization.ColumnChart(\n      this.elemObject.rewardPlot\n    );\n    this.choicePlot = new google.visualization.ColumnChart(\n      this.elemObject.choicePlot\n    );\n    this.objPerfPlot = new google.visualization.ColumnChart(\n      this.elemObject.objPerfPlot\n    );\n  }\n\n  public setupChartOptions() {\n    this.perfPlotOptions = {\n      width: this.elemObject.perfPlot.clientWidth,\n      height: this.elemObject.perfPlot.clientHeight,\n      hAxis: { title: 'Trial#' },\n      vAxis: { title: 'Correct (%)', viewWindow: { min: 0, max: 1.0 } },\n      animation: {\n        duration: 500,\n        easing: 'linear',\n        startup: true,\n      },\n      series: {\n        0: { color: '#43459d' },\n        1: { color: '#e2431e' },\n      },\n    };\n\n    this.perfPlotConfig = {\n      chartType: 'LineChart',\n      containerId: 'performance-plot',\n      options: this.perfPlotOptions,\n    };\n    this.perfFilterOptions = {\n      filterColumnLabel: 'currentTrial',\n      ui: {\n        chartType: 'LineChart',\n        chartOptions: {\n          smooth: 20,\n          hAxis: { baselineColor: 'none', title: 'Trial#' },\n          vAxis: { title: '%', viewWindow: { min: 0, max: 1.0 } },\n          width: this.elemObject.perfFilter.clientWidth,\n          height: this.elemObject.perfFilter.clientHeight,\n          animation: { duration: 1000, easing: 'out' },\n        },\n        chartView: {\n          columns: [0, 1],\n        },\n        minRangeSize: 2,\n      },\n    };\n    this.perfFilterConfig = {\n      controlType: 'ChartRangeFilter',\n      containerId: 'performance-filter',\n      state: { range: { start: 0, end: 100 } },\n      options: this.perfFilterOptions,\n    };\n    this.trialPlotOptions = {\n      width: this.elemObject.trialPlot.clientWidth,\n      height: this.elemObject.trialPlot.clientHeight,\n      areaOpacity: 0.5,\n      hAxis: { title: 'Time (h) ' },\n      vAxes: {\n        0: { title: 'Trial count' },\n        1: { title: 'RFID' },\n      },\n      animation: {\n        duration: 500,\n        easing: 'linear',\n      },\n      series: {\n        0: { targetAxisIndex: 0 },\n        1: { targetAxisIndex: 0 },\n        2: { targetAxisIndex: 1 },\n      },\n    };\n    this.trialPlotConfig = {\n      chartType: 'AreaChart',\n      containerId: 'trial-plot',\n      options: this.trialPlotOptions,\n    };\n    this.trialFilterOptions = {\n      filterColumnLabel: 'time',\n      ui: {\n        chartType: 'LineChart',\n        chartOptions: {\n          hAxis: { baselineColor: 'none', title: 'Time' },\n          vAxis: { title: '#' },\n          width: this.elemObject.trialFilter.clientWidth,\n          height: this.elemObject.trialFilter.clientHeight,\n          animation: { duration: 1000, easing: 'out' },\n        },\n      },\n      chartView: {\n        columns: [0, 1],\n      },\n    };\n    this.trialFilterConfig = {\n      controlType: 'ChartRangeFilter',\n      containerId: 'trial-filter',\n      state: { range: { start: 0, end: 100 } },\n      options: this.trialFilterOptions,\n    };\n\n    this.healthPlotOptions = {\n      width: this.elemObject.healthPlot.clientWidth,\n      height: this.elemObject.healthPlot.clientHeight,\n      hAxis: { title: 'Trial#' },\n      vAxis: { title: 'Time (ms)' },\n      // animation: {\n      //   duration: 500,\n      //   easing: 'linear',\n      //   startup: true\n      // }\n    };\n\n    this.healthPlotConfig = {\n      chartType: 'ScatterChart',\n      containerId: 'health-plot',\n      options: this.healthPlotOptions,\n    };\n    this.healthFilterOptions = {\n      filterColumnLabel: 'trial',\n      ui: {\n        chartType: 'ScatterChart',\n        chartOptions: {\n          smooth: 20,\n          hAxis: { baselineColor: 'none', title: 'Trial#' },\n          vAxis: { title: 'ms' },\n          width: this.elemObject.healthFilter.clientWidth,\n          height: this.elemObject.healthFilter.clientHeight,\n          // animation: { duration: 1000, easing: 'linear' }\n        },\n      },\n    };\n    this.healthFilterConfig = {\n      controlType: 'ChartRangeFilter',\n      containerId: 'health-filter',\n      state: { range: { start: 0, end: 100 } },\n      options: this.healthFilterOptions,\n    };\n\n    // this.healthPlotOptions = {\n    //   width: this.elemObject.healthPlot.clientWidth,\n    //   height: this.elemObject.healthPlot.clientHeight,\n    //   hAxis: { title: 'Trial #' },\n    //   vAxis: { title: 'Time (ms)' },\n    //   animation: {\n    //     duration: 500,\n    //     easing: 'linear',\n    //     startup: true\n    //   }\n    // };\n    // this.healthPlotConfig = {\n    //   chartType: 'ScatterChart',\n    //   containerId: 'health-plot',\n    //   options: this.healthPlotOptions\n    // };\n    // this.healthFilterOptions = {\n    //   filterColumnLabel: 'trial',\n    //   ui: {\n    //     chartType: 'ScatterChart',\n    //     chartOptions: {\n    //       hAxis: { baselineColor: 'none', title: 'Trial #' },\n    //       vAxis: { title: 'ms' },\n    //       width: this.elemObject.healthFilter.clientWidth,\n    //       height: this.elemObject.healthFilter.clientHeight,\n    //       animation: { duration: 1000, easing: 'out' }\n    //     },\n    //     minRangeSize: 2\n    //   }\n    // };\n    // this.healthFilterConfig = {\n    //   controlType: 'ChartRangeFilter',\n    //   containerId: 'health-filter',\n    //   state: { range: { start: 0, end: 100 } },\n    //   options: this.healthFilterOptions\n    // };\n\n    this.screenPlotOptions = {\n      seriesType: 'scatter',\n      pointSize: 1,\n    };\n    this.rxnPlotOptions = {\n      width: this.elemObject.rxnPlot.clientWidth,\n      height: this.elemObject.rxnPlot.clientHeight,\n      title: 'Reaction Time (ms)',\n      animation: {\n        duration: 500,\n        easing: 'linear',\n        startup: true,\n      },\n      legend: { position: 'none' },\n    };\n    this.rewardPlotOptions = {\n      width: this.elemObject.rewardPlot.clientWidth,\n      height: this.elemObject.rewardPlot.clientHeight,\n      title: 'Amount of Reward',\n      hAxis: { title: 'reward amount' },\n      vAxis: { title: 'counts', minValue: 0, maxValue: 1 },\n      legend: { position: 'none' },\n    };\n    this.choicePlotOptions = {\n      width: this.elemObject.choicePlot.clientWidth,\n      height: this.elemObject.choicePlot.clientHeight,\n      hAxis: { title: 'Choice' },\n      vAxis: { title: 'counts', minValue: 0, maxValue: 1 },\n      legend: { position: 'none' },\n    };\n    this.objPerfPlotOptions = {\n      width: this.elemObject.objPerfPlot.clientWidth,\n      height: this.elemObject.objPerfPlot.clientHeight,\n      hAxis: { title: 'Objects' },\n      vAxis: { title: 'counts', minValue: 0, maxValue: 1 },\n      title: 'Object Performance',\n      legend: { position: 'none' },\n    };\n  }\n\n  public initializeChartData(file: FileType, plotOptions: any) {\n    // Remove rows and columns\n    // console.log(this.perfDataTable);\n    this.perfDataTable.removeRows(0, this.perfDataTable.getNumberOfRows());\n    this.perfDataTable.removeColumns(\n      0,\n      this.perfDataTable.getNumberOfColumns()\n    );\n\n    this.cumulDataTable.removeRows(0, this.cumulDataTable.getNumberOfRows());\n    this.cumulDataTable.removeColumns(\n      0,\n      this.cumulDataTable.getNumberOfColumns()\n    );\n\n    this.healthDataTable.removeRows(0, this.healthDataTable.getNumberOfRows());\n    this.healthDataTable.removeColumns(\n      0,\n      this.healthDataTable.getNumberOfColumns()\n    );\n\n    this.xyPosDataTable.removeRows(0, this.xyPosDataTable.getNumberOfRows());\n    this.xyPosDataTable.removeColumns(\n      0,\n      this.xyPosDataTable.getNumberOfColumns()\n    );\n\n    this.realtimeDataTable.removeRows(\n      0,\n      this.realtimeDataTable.getNumberOfRows()\n    );\n    this.realtimeDataTable.removeColumns(\n      0,\n      this.realtimeDataTable.getNumberOfColumns()\n    );\n    this.realtimePlotActive = false;\n    this.realtimeRowDataAdded = false;\n    this.rtData['test'] = [];\n    this.rtData['choice'] = [];\n\n    this.rxnTimeDataTable.removeRows(\n      0,\n      this.rxnTimeDataTable.getNumberOfRows()\n    );\n    this.rxnTimeDataTable.removeColumns(\n      0,\n      this.rxnTimeDataTable.getNumberOfColumns()\n    );\n\n    this.rewardDataTable.removeRows(0, this.rewardDataTable.getNumberOfRows());\n    this.rewardDataTable.removeColumns(\n      0,\n      this.rewardDataTable.getNumberOfColumns()\n    );\n\n    this.choiceDataTable.removeRows(0, this.choiceDataTable.getNumberOfRows());\n    this.choiceDataTable.removeColumns(\n      0,\n      this.choiceDataTable.getNumberOfColumns()\n    );\n\n    this.objPerfDataTable.removeRows(\n      0,\n      this.objPerfDataTable.getNumberOfRows()\n    );\n    this.objPerfDataTable.removeColumns(\n      0,\n      this.objPerfDataTable.getNumberOfColumns()\n    );\n\n    // Add columns\n    this.perfDataTable.addColumn('number', 'currentTrial');\n    this.perfDataTable.addColumn('number', 'current');\n    this.perfDataTable.addColumn('number', '100trialsAvg');\n\n    this.cumulDataTable.addColumn('datetime', 'time');\n    this.cumulDataTable.addColumn('number', 'Trials');\n    this.cumulDataTable.addColumn('number', 'Performance');\n    this.cumulDataTable.addColumn('number', 'RFID');\n    // this.cumulDataTable.addColumn('number', 'Weight');\n\n    this.rxnTimeDataTable.addColumn('string', 'success');\n    this.rxnTimeDataTable.addColumn('number', 'durationMS');\n\n    /**\n     * xyPosDataTable Guide\n     * 0: x\n     * 1: y fix (box)\n     * 2: y sample (box)\n     * 3: y test1 (box) | y same (box)\n     * 4: y test2 (box) | y different (box)\n     * 5: y Fix_reward (dots)\n     * 6: y Fix_punish (dots)\n     * 7: y Target_reward (dots)\n     * 8: y Target_punish (dots)\n     */\n    this.xyPosDataTable.addColumn('number', 'xpos');\n    this.xyPosDataTable.addColumn('number', 'Fixation');\n    this.xyPosDataTable.addColumn('number', 'Sample');\n    this.realtimeDataTable.addColumn('number', 'globalX');\n    this.realtimeDataTable.addColumn('number', 'fixY');\n    this.realtimeDataTable.addColumn('number', 'sampleY');\n\n    if (file.data!.SameDifferent <= 0) {\n      for (let i = 0; i < file.data!.TestGridIndex.length; i++) {\n        this.xyPosDataTable.addColumn('number', `Test${i + 1}`);\n        this.realtimeDataTable.addColumn('number', `testY${i + 1}`);\n      }\n    } else if (file.data!.SameDifferent > 0) {\n      this.xyPosDataTable.addColumn('number', 'Same');\n      this.xyPosDataTable.addColumn('number', 'Different');\n      this.realtimeDataTable.addColumn('number', 'sameY');\n      this.realtimeDataTable.addColumn('number', 'differentY');\n    }\n\n    this.xyPosDataTable.addColumn('number', 'Fix_Reward');\n    this.xyPosDataTable.addColumn('number', 'Fix_Punish');\n    this.xyPosDataTable.addColumn('number', 'Target_Reward');\n    this.xyPosDataTable.addColumn('number', 'Target_Punish');\n\n    this.realtimeDataTable.addColumn('number', 'curY');\n    this.realtimeDataTable.addColumn({ type: 'string', role: 'style' });\n\n    this.rewardDataTable.addColumn('string', 'reward size');\n    this.rewardDataTable.addColumn('number', 'nrewards');\n\n    this.choiceDataTable.addColumn('string', 'choice');\n    this.choiceDataTable.addColumn('number', '# of responses');\n\n    this.objPerfDataTable.addColumn('string', 'object');\n    this.objPerfDataTable.addColumn('number', 'performance');\n\n    this.healthDataTable.addColumn('number', 'trial');\n    this.healthDataTable.addColumn('number', 'sample command');\n    this.healthDataTable.addColumn('number', 'sample command off');\n    this.healthDataTable.addColumn('number', 'tdisplay_last');\n    this.healthDataTable.addColumn('number', 'tdisplay_first');\n    this.healthDataTable.addColumn('number', 'eye interval');\n\n    this.updatePlots(file, plotOptions);\n  }\n\n  public updatePlots(file: FileType, plotOptions: any) {\n    let fileData: LiveplotDataType;\n    if (!_.isUndefined(file.data)) {\n      fileData = file.data;\n    } else {\n      throw 'file.data is Undefined';\n    }\n    console.log('plot updated');\n    this.loadVitals(file);\n    this.loadVitalsText(file);\n    // console.log('vitals', this.vitals);\n    this.loadPerformanceData(file);\n    this.loadHealthData(fileData);\n    this.loadObjPerfData(fileData);\n    this.loadChoiceData(fileData);\n    this.loadRewardData(fileData);\n    this.drawPerformancePlot(file);\n    this.drawTrialPlot(file);\n    this.drawHealthPlot(file);\n    this.drawObjPerfPlot();\n    this.drawRxnTimePlot();\n    this.drawChoicePlot();\n    this.drawRewardPlot();\n    this.loadTouchSDText();\n    let streamActive = plotOptions.streamActive;\n    this.drawScreenPlot(fileData, streamActive);\n    if (streamActive && !this.realtimePlotActive) {\n      console.log('hello');\n      this.drawRealtimePlot2(fileData);\n      this.realtimePlotActive = true;\n    }\n  }\n\n  private loadVitals(file: FileType) {\n    let data;\n    if (!_.isUndefined(file.data)) {\n      data = file.data;\n    } else {\n      throw 'file.data is Undefined';\n    }\n\n    this.vitals.subject = data.Subject;\n    this.vitals.trials = data.Response.length;\n\n    // Convert milliseconds to minutes\n    let startTime = data.StartTime;\n    this.vitals.time = _.round(\n      _.round(_.toNumber(_.last(startTime)) - startTime[0]) / 60000\n    );\n\n    /**\n     * RFID Processing\n     * Only supports current data format\n     * file.data.RFIDTag = {\n     *   0: [0, 2020-10-27T19:19:19.999Z, 00782A7E88A4],\n     *   1: [],\n     *   ...\n     * };\n     */\n    let rfidTag = data.RFIDTag;\n    if (!_.isUndefined(rfidTag) && _.size(rfidTag) > 0) {\n      this.vitals.rfidTag = rfidTag[_.size(rfidTag) - 1][2];\n      this.vitals.rfidTime = new Date(\n        rfidTag[_.size(rfidTag) - 1][1]\n      ).toLocaleTimeString('en-US');\n    } else {\n      this.vitals.rfidTag = null;\n      this.vitals.rfidTime = null;\n    }\n\n    // Automator, AutomatorStage, AutomatorStageName\n    if (_.isUndefined(data.Automator)) {\n      this.vitals.automator = null;\n    } else {\n      this.vitals.automator = file.data.Automator;\n    }\n\n    if (_.isUndefined(data.CurrentAutomatorStage)) {\n      this.vitals.automatorStage = null;\n    } else {\n      this.vitals.automatorStage = data.CurrentAutomatorStage;\n    }\n\n    if (_.isUndefined(data.CurrentAutomatorStageName)) {\n      this.vitals.automatorStageName = null;\n    } else {\n      this.vitals.automatorStageName = data.CurrentAutomatorStageName;\n    }\n\n    // Battery, only supports current data format\n    let battery = data.Battery;\n    if (!_.isUndefined(battery) && _.size(battery) > 0) {\n      this.vitals.batteryLeft = _.round(battery[_.size(battery) - 1][2] * 100);\n      this.vitals.batteryUsed = _.round(\n        battery[0][2] * 100 - this.vitals.batteryLeft\n      );\n    } else {\n      this.vitals.batteryLeft = null;\n      this.vitals.batteryUsed = null;\n    }\n\n    // Performance\n    let numCorrect = 0;\n    for (let i = 0; i < _.size(data.CorrectItem); i++) {\n      if (data.CorrectItem[i] == data.Response[i]) {\n        numCorrect++;\n      }\n    }\n\n    this.vitals.numCorrect = numCorrect;\n    this.vitals.pctCorrect = _.round((100 * numCorrect) / data.Response.length);\n\n    if (!_.isUndefined(data.NReward)) {\n      this.vitals.numReward = data.NReward.reduce((a: number, b: number) => {\n        return a + b;\n      }, 0);\n    }\n\n    this.vitals.rewardEstimate = 0;\n    if (!_.isUndefined(data.RewardPer1000Trials)) {\n      this.vitals.rewardEstimate = _.round(\n        (data.RewardPer1000Trials * this.vitals.numReward) / 1000\n      );\n    }\n  }\n\n  private loadVitalsText(file: FileType) {\n    this.elemObject.perfVitals.innerHTML = `${this.vitals.subject}: ${this.vitals.pctCorrect}% (n = ${this.vitals.numCorrect} out of ${this.vitals.trials}, r=${this.vitals.numReward}=${this.vitals.rewardEstimate}mL, ${this.vitals.time} mins)`;\n\n    // TODO: add this.vitals.tagCount data\n    this.elemObject.rfidVitals.innerHTML = `RFID: ${this.vitals.rfidTag} (${this.vitals.rfidTime})`;\n\n    this.elemObject.batteryVitals.innerHTML = `Battery: ${this.vitals.batteryLeft}% (-${this.vitals.batteryUsed}%)`;\n\n    this.elemObject.trialVitals.innerHTML = `Last Trial: ${file.dateSaved!.toLocaleTimeString(\n      'en-US'\n    )}`;\n  }\n\n  private loadTouchSDText() {\n    try {\n      this.screenPlotOptions.title = `Touch Locations -- standard dev: \\n Fixation: ${\n        Math.round(this.vitals.stdevFix * 10) / 10\n      } pixels`;\n      for (let i = 0; i < this.vitals.stdevTest.length; i++) {\n        this.screenPlotOptions.title =\n          this.screenPlotOptions.title +\n          `\\n Target ${i}: ${Math.round(this.vitals.stdevTest[i] * 10) / 10}`;\n      }\n    } catch (err) {\n      console.error('Error loading touch SD text', err);\n    }\n  }\n\n  private loadPerformanceData(file: FileType) {\n    // Typechecking file.data\n    let data;\n    if (!_.isUndefined(file.data)) {\n      data = file.data;\n    } else {\n      throw 'file.data is Undefined';\n    }\n\n    this.perfDataTable.removeRows(0, this.perfDataTable.getNumberOfRows());\n    this.cumulDataTable.removeRows(0, this.cumulDataTable.getNumberOfRows());\n    this.rxnTimeDataTable.removeRows(\n      0,\n      this.rxnTimeDataTable.getNumberOfRows()\n    );\n    this.xyPosDataTable.removeRows(0, this.xyPosDataTable.getNumberOfRows());\n\n    // Create Data Table\n    let xData = [];\n    let yData: number[] = [];\n    let yDataSmall = []; // keeps 5 recent\n    let yDataLarge = []; // keeps 100 recent\n    let numTotal = [];\n    let numCorrect: number[] = [];\n    let tCurrent = [];\n    let numRFID = [];\n    let xPos: number;\n    let yPos: number;\n    let touchevent: number[][] = [];\n    let rt = [];\n\n    // performance\n    for (let i = 0; i < data.CorrectItem.length; i++) {\n      if (data.CorrectItem[i] == data.Response[i]) {\n        yData[i] = 1; // correct\n      } else {\n        yData[i] = 0; // incorrect\n      }\n\n      xData[i] = i;\n\n      // Cumulative trials & correct trials\n      numTotal[i] = xData.length;\n      if (i > 0) {\n        numCorrect[i] = numCorrect[i - 1] + yData[i];\n      } else if (i == 0) {\n        numCorrect[i] = yData[i];\n      }\n    }\n\n    for (let i = 0; i < data.NReward.length; i++) {\n      if (data.RewardStage == 0) {\n        rt[i] = data.FixationXYT[2][i] - data.StartTime[i];\n        this.rxnTimeDataTable.addRows([\n          [file.data.FixationTouchEvent[i], rt[i]],\n        ]);\n      } else if (data.NRSVP > 0) {\n        rt[i] = data.SampleFixationXYT[2][i] - data.SampleStartTime[i];\n        this.rxnTimeDataTable.addRows([\n          [data.SampleFixationTouchEvent[i], rt[i]],\n        ]);\n      } else {\n        rt[i] = data.ResponseXYT[2][i] - data.SampleStartTime[i];\n        if (data.Response[i] == -1) {\n          this.rxnTimeDataTable.addRows([['timeout', data.ChoiceTimeOut]]);\n        } else if (data.CorrectItem[i] == data.Response[i]) {\n          this.rxnTimeDataTable.addRows([['correct', rt[i]]]);\n        } else {\n          this.rxnTimeDataTable.addRows([['wrong', rt[i]]]);\n        }\n      }\n    }\n\n    // console.log(rt);\n\n    /**\n     * Touch XY\n     * Store fixation in odd indices and choice in even\n     * All touchevents. touchevent has a length that is twice the length\n     * of file.data.FixationXYT or file.data.ResponseXYT\n     */\n    if (\n      !_.isUndefined(data.ResponseXYT) &&\n      _.size(data.ResponseXYT) > 0 &&\n      _.size(file.data.ResponseXYT[0]) > 0\n    ) {\n      for (let i = 0; i < _.size(data.FixationXYT[0]) * 2; i += 2) {\n        touchevent[i] = [];\n        touchevent[i + 1] = [];\n        touchevent[i][0] = file.data.FixationXYT[0][i / 2];\n        touchevent[i + 1][0] = file.data.ResponseXYT[0][i / 2];\n        touchevent[i][1] = file.data.FixationXYT[1][i / 2];\n        touchevent[i + 1][1] = file.data.ResponseXYT[1][i / 2];\n      }\n    } else {\n      for (let i = 0; i < _.size(data.FixationXYT[0]) * 2; i += 2) {\n        touchevent[i] = [];\n        touchevent[i + 1] = [];\n        touchevent[i][0] = file.data.FixationXYT[0][i / 2];\n        touchevent[i + 1][0] = file.data.FixationXYT[0][i / 2];\n        touchevent[i][1] = file.data.FixationXYT[1][i / 2];\n        touchevent[i + 1][1] = file.data.FixationXYT[1][i / 2];\n      }\n    }\n\n    // Sample & Test Boxes -- Draw them as a bounding box in the touch plot\n    let numColumnXYPos = this.xyPosDataTable.getNumberOfColumns();\n    let numColRealtime = this.realtimeDataTable.getNumberOfColumns();\n    let sampleWidth = this.getSampleWidth(file.data);\n    let sampleHeight = sampleWidth;\n    let testWidth = this.getTestWidth(file.data);\n    let testHeight = testWidth;\n\n    // Fixation & Choice Boxes\n    let fixationWidth = this.getFixationWidth(file.data, sampleWidth);\n    let fixationHeight = fixationWidth;\n    let choiceWidth = this.getChoiceWidth(file.data);\n    let choiceHeight = choiceWidth;\n\n    /**\n     * NOTE for positioning elements:\n     * grid x, y is offset || fixation & response x, y is not\n     */\n\n    // FIXATION\n    let numDisplayElems = 1;\n    // let xyPosArray = [];\n    let fixX: number;\n    let fixY: number;\n    let maxFixationGridIndex = _.max(file.data.FixationGridIndex);\n    if (_.isNumber(maxFixationGridIndex)) {\n      fixX = file.data.XGridCenter[maxFixationGridIndex];\n      fixY =\n        file.data.ViewportPixels[1] -\n        (file.data.YGridCenter[maxFixationGridIndex] + file.data.offsettop);\n      // console.log('fixY', fixY);\n    } else {\n      throw 'data.FixationGridIndex is not of type number[]';\n    }\n\n    this.generateAndAddRowData(this.xyPosDataTable, numColumnXYPos, {\n      0: fixX - fixationWidth / 2,\n      1: fixY - fixationHeight / 2,\n    });\n    this.generateAndAddRowData(this.xyPosDataTable, numColumnXYPos, {\n      0: fixX + fixationWidth / 2,\n      1: fixY - fixationHeight / 2,\n    });\n    this.generateAndAddRowData(this.xyPosDataTable, numColumnXYPos, {\n      0: fixX + fixationWidth / 2,\n      1: fixY + fixationHeight / 2,\n    });\n    this.generateAndAddRowData(this.xyPosDataTable, numColumnXYPos, {\n      0: fixX - fixationWidth / 2,\n      1: fixY + fixationHeight / 2,\n    });\n    this.generateAndAddRowData(this.xyPosDataTable, numColumnXYPos, {\n      0: fixX - fixationWidth / 2,\n      1: fixY - fixationHeight / 2,\n    });\n\n    if (!this.realtimeRowDataAdded && !this.realtimePlotActive) {\n      console.log('realtime not active');\n      this.rtData['fixation'] = {\n        x: fixX,\n        y: fixY,\n        width: fixationWidth,\n        height: fixationHeight,\n      };\n    }\n\n    // SAMPLE\n    numDisplayElems = 2;\n    let sampleX: number;\n    let sampleY: number;\n    let maxSampleGridIndex = _.max(data.SampleGridIndex);\n\n    if (data.RewardStage > 0) {\n      if (_.isNumber(maxSampleGridIndex)) {\n        sampleX = data.XGridCenter[maxSampleGridIndex];\n        sampleY =\n          data.ViewportPixels[1] -\n          (data.YGridCenter[maxSampleGridIndex] + data.offsettop);\n      } else {\n        throw 'data.SampleGridIndex is not of type number[]';\n      }\n    } else {\n      sampleX = fixX;\n      sampleY = fixY;\n    }\n\n    this.generateAndAddRowData(this.xyPosDataTable, numColumnXYPos, {\n      0: sampleX - sampleWidth / 2,\n      2: sampleY - sampleHeight / 2,\n    });\n    this.generateAndAddRowData(this.xyPosDataTable, numColumnXYPos, {\n      0: sampleX + sampleWidth / 2,\n      2: sampleY - sampleHeight / 2,\n    });\n    this.generateAndAddRowData(this.xyPosDataTable, numColumnXYPos, {\n      0: sampleX + sampleWidth / 2,\n      2: sampleY + sampleHeight / 2,\n    });\n    this.generateAndAddRowData(this.xyPosDataTable, numColumnXYPos, {\n      0: sampleX - sampleWidth / 2,\n      2: sampleY + sampleHeight / 2,\n    });\n    this.generateAndAddRowData(this.xyPosDataTable, numColumnXYPos, {\n      0: sampleX - sampleWidth / 2,\n      2: sampleY - sampleHeight / 2,\n    });\n\n    if (!this.realtimeRowDataAdded && !this.realtimePlotActive) {\n      this.rtData['sample'] = {\n        x: sampleX,\n        y: sampleY,\n        width: sampleWidth,\n        height: sampleHeight,\n      };\n    }\n\n    // TEST:\n    let testX: number[] = [];\n    let testY: number[] = [];\n\n    if (data.RewardStage != 0) {\n      for (let i = 0; i < _.size(data.TestGridIndex); i++) {\n        // If Same-Different, only show the first test\n        if (data.SameDifferent > 0 || data.NRSVP > 0) {\n          break;\n        }\n\n        numDisplayElems++;\n        if (data.NRSVP > 0) {\n          testX.push(data.XGridCenter[maxSampleGridIndex as number]);\n          testY.push(\n            data.ViewportPixels[1] -\n              (data.YGridCenter[maxSampleGridIndex as number] + data.offsettop)\n          );\n        } else {\n          testX.push(data.XGridCenter[data.TestGridIndex[i]]);\n          testY.push(\n            data.ViewportPixels[1] -\n              (data.YGridCenter[data.TestGridIndex[i]] + data.offsettop)\n          );\n        }\n\n        this.generateAndAddRowData(this.xyPosDataTable, numColumnXYPos, {\n          0: testX[i] - testWidth / 2,\n          [numDisplayElems]: testY[i] - testHeight / 2,\n        });\n        this.generateAndAddRowData(this.xyPosDataTable, numColumnXYPos, {\n          0: testX[i] + testWidth / 2,\n          [numDisplayElems]: testY[i] - testHeight / 2,\n        });\n        this.generateAndAddRowData(this.xyPosDataTable, numColumnXYPos, {\n          0: testX[i] + testWidth / 2,\n          [numDisplayElems]: testY[i] + testHeight / 2,\n        });\n        this.generateAndAddRowData(this.xyPosDataTable, numColumnXYPos, {\n          0: testX[i] - testWidth / 2,\n          [numDisplayElems]: testY[i] + testHeight / 2,\n        });\n        this.generateAndAddRowData(this.xyPosDataTable, numColumnXYPos, {\n          0: testX[i] - testWidth / 2,\n          [numDisplayElems]: testY[i] - testHeight / 2,\n        });\n\n        if (!this.realtimeRowDataAdded && !this.realtimePlotActive) {\n          let tmp = {\n            x: testX[i],\n            y: testY[i],\n            width: testWidth,\n            height: testHeight,\n          };\n          this.rtData['test'].push(tmp);\n        }\n      }\n    }\n\n    // CHOICE:\n    let choiceX: number[] = [];\n    let choiceY: number[] = [];\n\n    if (data.RewardStage != 0 && data.SameDifferent > 0) {\n      for (let i = 0; i < _.size(data.ChoiceGridIndex); i++) {\n        numDisplayElems++;\n        choiceX.push(data.XGridCenter[data.ChoiceGridIndex[i]]);\n        choiceY.push(\n          data.ViewportPixels[1] -\n            (data.YGridCenter[data.ChoiceGridIndex[i]] + data.offsettop)\n        );\n\n        this.generateAndAddRowData(this.xyPosDataTable, numColumnXYPos, {\n          0: choiceX[i] - choiceWidth / 2,\n          [numDisplayElems]: choiceY[i] - choiceHeight / 2,\n        });\n        this.generateAndAddRowData(this.xyPosDataTable, numColumnXYPos, {\n          0: choiceX[i] + choiceWidth / 2,\n          [numDisplayElems]: choiceY[i] - choiceHeight / 2,\n        });\n        this.generateAndAddRowData(this.xyPosDataTable, numColumnXYPos, {\n          0: choiceX[i] + choiceWidth / 2,\n          [numDisplayElems]: choiceY[i] + choiceHeight / 2,\n        });\n        this.generateAndAddRowData(this.xyPosDataTable, numColumnXYPos, {\n          0: choiceX[i] - choiceWidth / 2,\n          [numDisplayElems]: choiceY[i] + choiceHeight / 2,\n        });\n        this.generateAndAddRowData(this.xyPosDataTable, numColumnXYPos, {\n          0: choiceX[i] - choiceWidth / 2,\n          [numDisplayElems]: choiceY[i] - choiceHeight / 2,\n        });\n\n        // realtime not active\n        if (!this.realtimeRowDataAdded && !this.realtimePlotActive) {\n          this.rtData['choice'].push({\n            x: choiceX[i],\n            y: choiceY[i],\n            width: choiceWidth,\n            height: choiceHeight,\n          });\n        }\n      }\n    }\n    this.realtimeRowDataAdded = true;\n\n    let fixXPos: number[] = [];\n    let fixYPos: number[] = [];\n    let testXPos: number[][] = [];\n    let testYPos: number[][] = [];\n    let numTarget = [0, 0];\n\n    for (let i = 0; i < touchevent.length; i++) {\n      xPos = touchevent[i][0];\n      yPos = data.ViewportPixels[1] - touchevent[i][1];\n\n      let yDataIndex: number;\n      if (i % 2 == 0) {\n        yDataIndex = i / 2;\n      } else {\n        yDataIndex = (i - 1) / 2;\n      }\n\n      if (xPos != -1) {\n        let arr = new Array(numColumnXYPos);\n        arr[0] = xPos;\n\n        if (i % 2 == 0) {\n          fixXPos.push(xPos);\n          fixYPos.push(yPos);\n\n          if (yData[yDataIndex] == 1) {\n            arr[numDisplayElems + 1] = yPos;\n            this.xyPosDataTable.addRows([arr]);\n          } else {\n            arr[numDisplayElems + 2] = yPos;\n            this.xyPosDataTable.addRows([arr]);\n          }\n        } else {\n          let testXPosArr: number[] = [];\n          let testYPosArr: number[] = [];\n\n          for (let j = 0; j < _.size(data.TestGridIndex); j++) {\n            if (data.Response[yDataIndex] == j) {\n              testXPosArr.push(xPos);\n              testYPosArr.push(yPos);\n              numTarget[j] += 1;\n            } else {\n              testXPosArr.push(0);\n              testYPosArr.push(0);\n            }\n\n            testXPos.push(testXPosArr);\n            testYPos.push(testYPosArr);\n          }\n\n          if (yData[yDataIndex] == 1) {\n            arr[numDisplayElems + 3] = yPos;\n            this.xyPosDataTable.addRows([arr]);\n          } else {\n            arr[numDisplayElems + 4] = yPos;\n            this.xyPosDataTable.addRows([arr]);\n          }\n        }\n      }\n\n      let meanFixXPos = _.mean(fixXPos);\n      let meanFixYPos = _.mean(fixYPos);\n      let distFixXPos = fixXPos.map((a: number) => {\n        return Math.pow(Math.abs(a - meanFixXPos), 2);\n      });\n      let distFixYPos = fixYPos.map((a: number) => {\n        return Math.pow(Math.abs(a - meanFixYPos), 2);\n      });\n      let stdevFix =\n        distFixXPos\n          .map((a: number, idx: number) => {\n            return Math.sqrt(a + distFixYPos[idx]);\n          })\n          .reduce((a: number, b: number) => {\n            return a + b;\n          }, 0) / _.size(distFixXPos);\n      this.vitals.stdevFix = stdevFix;\n\n      let stdevTest: number[] = [];\n      for (let j = 0; j < _.size(data.TestGridIndex); j++) {\n        let allTestXPos = testXPos\n          .map((a: number[]) => {\n            return a[j];\n          })\n          .filter((a: number) => {\n            return a != 0;\n          });\n\n        let meanTestXPos =\n          allTestXPos.reduce((a: number, b: number) => {\n            return a + b;\n          }, 0) / _.size(allTestXPos);\n\n        let distTestXPos = allTestXPos.map((a: number) => {\n          return Math.pow(Math.abs(a - meanTestXPos), 2);\n        });\n\n        let allTestYPos = testYPos\n          .map((a: number[]) => {\n            return a[j];\n          })\n          .filter((a: number) => {\n            return a != 0;\n          });\n\n        let meanTestYPos =\n          allTestYPos.reduce((a: number, b: number) => {\n            return a + b;\n          }, 0) / _.size(allTestYPos);\n\n        let distTestYPos = allTestYPos.map((a: number) => {\n          return Math.pow(Math.abs(a - meanTestYPos), 2);\n        });\n\n        stdevTest.push(\n          distTestXPos\n            .map((a: number, i: number) => {\n              return Math.sqrt(a + distTestYPos[i]);\n            })\n            .reduce((a: number, b: number) => {\n              return a + b;\n            }, 0) / _.size(allTestXPos)\n        );\n      }\n      this.vitals.stdevTest = stdevTest;\n    }\n\n    yDataSmall = utils.smooth(yData, 5);\n    yDataLarge = utils.smooth(yData, 100);\n\n    // Calculate timeEnd\n    let timeEnd: number;\n    if (\n      _.isUndefined(data.ResponseXYT) ||\n      _.size(data.ResponseXYT) < 1 ||\n      _.isUndefined(data.ResponseXYT[2][_.size(data.ResponseXYT[2]) - 1])\n    ) {\n      timeEnd = data.FixationXYT[2][_.size(data.FixationXYT[2]) - 1];\n    } else {\n      timeEnd = data.ResponseXYT[2][_.size(data.ResponseXYT[2]) - 1];\n    }\n\n    // RFID\n    let numTrials = _.size(yData);\n    let numReads = _.size(data.RFIDTag);\n    numRFID = _.fill(Array(numTrials), 0);\n    this.vitals.tagCount = {};\n\n    for (let i = 0; i < numReads; i++) {\n      if (_.isUndefined(this.vitals.tagCount[data.RFIDTag[i][2]])) {\n        this.vitals.tagCount[data.RFIDTag[i][2]] = 0;\n      }\n      this.vitals.tagCount[data.RFIDTag[i][2]] += 1;\n      numRFID[data.RFIDTag[i][0]] += 1;\n    }\n\n    for (let i = 1; i < _.size(numRFID); i++) {\n      numRFID[i] = numRFID[i] + numRFID[i - 1];\n    }\n\n    // Adding rest of the data\n    for (let i = 0; i < _.size(yData); i++) {\n      let timeFix = data.FixationXYT[2][i]; // in milliseconds\n      if (timeFix < 0) {\n        continue;\n      }\n\n      let t = new Date(file.dateSaved!);\n      t.setTime(t.getTime() - (timeEnd - timeFix));\n\n      this.perfDataTable.addRows([[xData[i], yDataSmall[i], yDataLarge[i]]]);\n      this.cumulDataTable.addRows([\n        [t, numTotal[i], numCorrect[i], numRFID[i]],\n      ]);\n    }\n    this.formatDate(this.cumulDataTable, 0);\n  }\n\n  private generateAndAddRowData(\n    target: google.visualization.DataTable,\n    numColumns: number,\n    data: Record<number, number | string>\n  ) {\n    // console.log('data', data);\n    let arr = [];\n    for (let i = 0; i < numColumns; i++) {\n      if (_.has(data, i)) {\n        arr.push(data[i]);\n      } else {\n        arr.push(null);\n      }\n    }\n    // console.log('arr:', arr);\n    target.addRows([arr]);\n  }\n\n  // TODO: deal with case where SampleScenes[0].OBJECTS[firstKey].sizeInches is an\n  // Array of arrays -- i.e. scene movie\n  private getSampleWidth(fileData: LiveplotDataType) {\n    let sampleWidth = 0;\n    if (_.size(fileData.SampleScenes[0].IMAGES.imageidx) > 0) {\n      if (_.isArray(fileData.SampleScenes[0].IMAGES.sizeInches)) {\n        let maxSizeInches = _.max(fileData.SampleScenes[0].IMAGES.sizeInches);\n        if (_.isNumber(maxSizeInches)) {\n          sampleWidth = maxSizeInches * fileData.ViewportPPI;\n        }\n      } else {\n        console.error(\n          'SampleScenes[0].IMAGES.sizeInches is not an array. Please fix!'\n        );\n        sampleWidth =\n          fileData.SampleScenes[0].IMAGES.sizeInches * fileData.ViewportPPI;\n      }\n    } else {\n      let firstKey = _.findKey(fileData.SampleScenes[0].OBJECTS);\n      if (_.isString(firstKey)) {\n        let maxSizeInches = _.max(\n          fileData.SampleScenes[0].OBJECTS[firstKey].sizeInches\n        );\n        if (_.isNumber(maxSizeInches)) {\n          sampleWidth = maxSizeInches * fileData.ViewportPPI;\n        }\n      } else {\n        console.error(\n          'firstKey of SampleScenes[0].OBJECTS is not of type string'\n        );\n      }\n    }\n    return sampleWidth;\n  }\n\n  private getTestWidth(fileData: LiveplotDataType) {\n    let testWidth = 0;\n\n    if (fileData.TestScenes[0].IMAGES.imageidx.length > 0) {\n      if (_.isArray(fileData.TestScenes[0].IMAGES.sizeInches)) {\n        let maxSizeInches = _.max(fileData.TestScenes[0].IMAGES.sizeInches);\n        if (_.isNumber(maxSizeInches)) {\n          testWidth = maxSizeInches * fileData.ViewportPPI;\n        } else {\n          console.error(\n            'TestScenes[0].IMAGES.sizeInches is not of type number'\n          );\n        }\n      } else {\n        console.error(\n          'TestScenes[0].IMAGES.sizeInches is not an array. Please fix!'\n        );\n        testWidth =\n          fileData.TestScenes[0].IMAGES.sizeInches * fileData.ViewportPPI;\n      }\n    } else {\n      let firstKey = _.findKey(fileData.TestScenes[0].OBJECTS);\n      if (_.isString(firstKey)) {\n        let maxSizeInches = _.max(\n          fileData.TestScenes[0].OBJECTS[firstKey].sizeInches\n        );\n        if (_.isNumber(maxSizeInches)) {\n          testWidth = maxSizeInches * fileData.ViewportPPI;\n        } else {\n          console.error(\n            'firstKey of TestScenes[0].OBJECTS is not of type string'\n          );\n        }\n      }\n    }\n\n    if (!_.isUndefined(fileData.NRSVP) && fileData.NRSVP > 0) {\n      testWidth = fileData.SampleFixationSizeInches * fileData.ViewportPPI;\n    }\n\n    return testWidth;\n  }\n\n  private getFixationWidth(fileData: LiveplotDataType, sampleWidth: number) {\n    let fixationWidth = 0;\n\n    if (fileData.FixationUsesSample <= 0) {\n      fixationWidth = fileData.FixationSizeInches * fileData.ViewportPPI;\n    } else {\n      fixationWidth = sampleWidth;\n    }\n    return fixationWidth;\n  }\n\n  private getChoiceWidth(fileData: LiveplotDataType) {\n    let choiceWidth = 0;\n    if (!_.isUndefined(fileData.SameDifferent) && fileData.SameDifferent > 0) {\n      choiceWidth = fileData.ChoiceSizeInches * fileData.ViewportPPI;\n    }\n    return choiceWidth;\n  }\n\n  private loadObjPerfData(data: LiveplotDataType) {\n    this.objPerfDataTable.removeRows(\n      0,\n      this.objPerfDataTable.getNumberOfRows()\n    );\n\n    let lenSampleObj: number;\n    if (data.RewardStage == 1) {\n      let sampleObj = [];\n      if (data.NTrialsPerBagBlock > 5000) {\n        sampleObj.push(data.ImageBagsSample[0].split('/')[5]);\n        this.objPerfDataTable.addRow([sampleObj[0], 0]);\n        lenSampleObj = 1;\n      } else {\n        for (let i = 0; i < _.size(data.ImageBagsSample); i++) {\n          sampleObj.push(data.ImageBagsSample[i].split('/')[5]);\n          this.objPerfDataTable.addRow([sampleObj[i], 0]);\n        }\n        lenSampleObj = _.size(sampleObj);\n      }\n\n      let NDiffObjPerf = _.fill(Array(lenSampleObj), 0);\n      let NDiffObj = _.fill(Array(lenSampleObj), 0);\n      for (let i = 0; i < _.size(data.Sample[0]); i++) {\n        // For i trials\n        for (let j = 0; j < lenSampleObj; j++) {\n          // If sample was that object\n          if (data.SampleBagIdx[data.Sample[0][i]] == j) {\n            NDiffObj[j] += 1;\n            // If correct\n            if (data.Response[i] == data.CorrectItem[i]) {\n              NDiffObjPerf[j] += 1;\n            }\n          }\n          this.objPerfDataTable.setValue(j, 1, NDiffObjPerf[j] / NDiffObj[j]);\n        }\n      }\n    }\n  }\n\n  private loadChoiceData(data: LiveplotDataType) {\n    this.choiceDataTable.removeRows(0, this.choiceDataTable.getNumberOfRows());\n\n    if (data.RewardStage != 0) {\n      // let possibleResp = _.fill(Array(_.size(data.ObjectGridIndex)), 0);\n      let possibleResp = [];\n\n      if (\n        _.size(data.ObjectGridIndex) != 0 &&\n        (_.isUndefined(data.NTrialsPerBagBlock) ||\n          data.NTrialsPerBagBlock < 1000)\n      ) {\n        let objGridIndex = _.cloneDeep(data.ObjectGridIndex);\n        objGridIndex.sort((a: number, b: number) => {\n          return a - b;\n        });\n        let allind = [];\n        for (let i = 0; i < _.size(objGridIndex); i++) {\n          // allind.push(_.findIndex(data.ObjectGridIndex, objGridIndex[i]));\n          allind.push(data.ObjectGridIndex.indexOf(objGridIndex[i]));\n          this.choiceDataTable.addRow([\n            data.ImageBagsSample[allind[i]].split('/')[5],\n            0,\n          ]);\n          possibleResp.push(i);\n        }\n      } else {\n        for (let i = 0; i < _.size(data.TestGridIndex); i++) {\n          this.choiceDataTable.addRow(['choice' + (i + 1), 0]);\n          possibleResp.push(i);\n        }\n      }\n\n      let NDiffChoice = _.fill(Array(_.size(possibleResp)), 0);\n      let NAllChoice = 0;\n\n      for (let i = 0; i < _.size(data.Response); i++) {\n        if (data.Response[i] != -1) {\n          NAllChoice++;\n        }\n\n        for (let j = 0; j < _.size(possibleResp); j++) {\n          if (data.Response[i] == possibleResp[j] && data.Response[i] != -1) {\n            NDiffChoice[j]++;\n          }\n          this.choiceDataTable.setValue(j, 1, NDiffChoice[j] / NAllChoice);\n        }\n      }\n    } else {\n      this.choiceDataTable.addRow(['outside Fix', 0]);\n      this.choiceDataTable.addRow(['inside Fix', 0]);\n\n      let NDiffChoice = _.fill(Array(2), 0);\n      let NAllChoice = 0;\n      let yData = [];\n\n      for (let i = 0; i < _.size(data.CorrectItem); i++) {\n        if (data.CorrectItem[i] == data.Response[i]) {\n          yData.push(1);\n        } else {\n          yData.push(0);\n        }\n      }\n\n      for (let i = 0; i < _.size(yData); i++) {\n        NAllChoice++;\n\n        for (let j = 0; j < 2; j++) {\n          if (yData[i] == j) {\n            NDiffChoice[j] += 1;\n          }\n          this.choiceDataTable.setValue(j, 1, NDiffChoice[j] / NAllChoice);\n        }\n      }\n    }\n  }\n\n  private loadRewardData(data: LiveplotDataType) {\n    this.rewardDataTable.removeRows(0, this.rewardDataTable.getNumberOfRows());\n\n    let nrewardArr: number[] = [];\n\n    for (let i = 0; i <= data.NRewardMax; i++) {\n      nrewardArr.push(0);\n    }\n\n    data.NReward.forEach((elem: number) => {\n      nrewardArr[elem]++;\n    });\n\n    for (let i = 0; i < nrewardArr.length; i++) {\n      this.rewardDataTable.addRow([i.toString(), nrewardArr[i]]);\n    }\n  }\n\n  private loadHealthData(data: LiveplotDataType) {\n    // console.log('[loadHealthData::fileData]', data);\n    this.healthDataTable.removeRows(0, this.healthDataTable.getNumberOfRows());\n\n    if (data.RewardStage > 0) {\n      const lastIdx = Object.keys(data.TSequenceActualClip).length - 1;\n\n      for (let i = 0; i < data.TSequenceActualClip[lastIdx].length; i++) {\n        let dt: any;\n        let dt2: any;\n        let sampleCmdInterval: any;\n        let sampleCmdOffInterval: any;\n        let eyeTrackerSampleInterval: any;\n\n        try {\n          if (data.TSequenceActualClip[lastIdx][i] < 0) {\n            dt = null;\n          } else {\n            dt =\n              data.TSequenceActualClip[lastIdx][i] -\n              data.TSequenceDesiredClip[lastIdx][i];\n            dt = Math.abs(Math.round(dt));\n          }\n        } catch {\n          dt = null;\n        }\n\n        try {\n          if (data.TSequenceActualClip[1][i] < 0) {\n            dt2 = null;\n          } else {\n            dt2 =\n              data.TSequenceActualClip[1][i] - data.TSequenceDesiredClip[1][i];\n            dt2 = Math.abs(Math.round(dt2));\n          }\n        } catch {\n          dt2 = null;\n        }\n\n        try {\n          if (\n            data.SampleCommandReturnTime[i] == null ||\n            data.SampleCommandReturnTime[i] < 0 ||\n            data.SampleCommandReturnTime[i] === undefined\n          ) {\n            sampleCmdInterval = null;\n          } else {\n            sampleCmdInterval =\n              data.SampleCommandReturnTime[i] - data.SampleStartTime[i];\n          }\n        } catch {\n          sampleCmdInterval = null;\n        }\n\n        try {\n          if (\n            data.SampleCommandOffReturnTime[i] == null ||\n            data.SampleCommandOffReturnTime[i] < 0 ||\n            data.SampleCommandOffReturnTime[i] === undefined\n          ) {\n            sampleCmdOffInterval = null;\n          } else {\n            sampleCmdOffInterval =\n              data.SampleCommandOffReturnTime[i] - data.EndTime[i];\n          }\n        } catch {\n          sampleCmdOffInterval = null;\n        }\n\n        try {\n          eyeTrackerSampleInterval = data.EyetrackerSampleInterval[i];\n        } catch {\n          eyeTrackerSampleInterval = null;\n        }\n\n        this.healthDataTable.addRows([\n          [\n            i,\n            sampleCmdInterval,\n            sampleCmdOffInterval,\n            dt,\n            dt2,\n            eyeTrackerSampleInterval,\n          ],\n        ]);\n      }\n    }\n  }\n\n  private drawPerformancePlot(file: FileType) {\n    let numRows = this.perfDataTable.getNumberOfRows();\n    this.nTrials = numRows;\n    let perfFilterState: any = this.perfFilter.getState();\n\n    // updating perfFilter\n    if (file.dataChanged && !file.fileChanged) {\n      if (numRows <= 100) {\n        // expand window size automatically up to 100\n        perfFilterState.range.start = 0;\n        perfFilterState.range.end = numRows;\n      } else {\n        let dTrials = numRows - _.size(file.data?.FixationGridIndex);\n        console.log('dtrials', dTrials);\n        perfFilterState.range.start = numRows - 100;\n        perfFilterState.range.end = numRows;\n      }\n    } else if (file.fileChanged) {\n      let dSlider = 100;\n      perfFilterState.range.start = numRows - dSlider;\n      perfFilterState.range.end = numRows;\n      if (perfFilterState.range.start < 0) {\n        perfFilterState.range.start = 0;\n      }\n    }\n\n    this.perfPlot.setOptions(this.perfPlotOptions);\n    this.perfFilter.setState({\n      range: {\n        start: perfFilterState.range.start,\n        end: perfFilterState.range.end,\n      },\n    });\n    this.perfDashboard.draw(this.perfDataTable);\n  }\n\n  private drawHealthPlot(file: FileType) {\n    let numRows = this.healthDataTable.getNumberOfRows();\n    // console.log('[drawHealthPlot::numRows]:', numRows);\n    let healthFilterState: any = this.healthFilter.getState();\n    // console.log('[drawHealthPlot::healthFilterState]:', healthFilterState);\n\n    if (file.dataChanged && !file.fileChanged) {\n      if (numRows <= 100) {\n        healthFilterState.range.start = 0;\n        healthFilterState.range.end = numRows;\n      } else {\n        healthFilterState.range.start = numRows - 100;\n        healthFilterState.range.end = numRows;\n      }\n    } else if (file.fileChanged) {\n      let dSlider = 100;\n      healthFilterState.range.start = numRows - dSlider;\n      healthFilterState.range.end = numRows;\n      if (healthFilterState.range.start < 0) {\n        healthFilterState.range.start = 0;\n      }\n    }\n\n    this.healthPlot.setOptions(this.healthPlotOptions);\n    this.healthFilter.setState({\n      range: {\n        start: healthFilterState.range.start,\n        end: healthFilterState.range.end,\n      },\n    });\n    this.healthDashboard.draw(this.healthDataTable);\n  }\n\n  private drawTrialPlot(file: FileType) {\n    let trialFilterState: any = this.trialFilter.getState();\n    let tmin = new Date(this.cumulDataTable.getColumnRange(0).min);\n    let tmax = new Date(this.cumulDataTable.getColumnRange(0).max);\n\n    if (file.dataChanged || file.fileChanged) {\n      trialFilterState.range.start = tmin;\n      trialFilterState.range.end = tmax;\n    }\n\n    this.trialFilter.setState({\n      range: {\n        start: trialFilterState.range.start,\n        end: trialFilterState.range.end,\n      },\n    });\n    this.trialPlot.setOptions(this.trialPlotOptions);\n    this.trialDashboard.draw(this.cumulDataTable);\n  }\n\n  private drawObjPerfPlot() {\n    this.objPerfPlot.draw(this.objPerfDataTable, this.objPerfPlotOptions);\n  }\n\n  private drawRxnTimePlot() {\n    this.rxnPlot.draw(this.rxnTimeDataTable, this.rxnPlotOptions);\n  }\n\n  private drawChoicePlot() {\n    this.choicePlot.draw(this.choiceDataTable, this.choicePlotOptions);\n  }\n\n  private drawRewardPlot() {\n    this.rewardPlot.draw(this.rewardDataTable, this.rewardPlotOptions);\n  }\n\n  // private drawRealtimePlot(data: LiveplotDataType) {\n  //   let idx = 0;\n  //   this.realtimePlotOptions = {\n  //     seriesType: 'scatter',\n  //     width: data.workspace[2] * data.CanvasRatio,\n  //     height: data.ViewportPixels[1] - data.offsettop,\n  //     legend: {\n  //       position: 'top',\n  //     },\n  //     hAxis: {\n  //       title: 'X position (px)',\n  //       viewWindow: {\n  //         min: 0,\n  //         max: data.workspace[2] * data.CanvasRatio,\n  //       },\n  //     },\n  //     vAxis: {\n  //       title: 'Y position (px)',\n  //       viewWindow: {\n  //         min: 0,\n  //         max: data.ViewportPixels[1] - data.offsettop,\n  //       },\n  //     },\n  //   };\n  //   this.realtimePlotOptions.hAxis = {\n  //     title: 'X position (px)',\n  //     viewWindow: {\n  //       min: 0,\n  //       max: data.workspace[2] * data.CanvasRatio,\n  //     },\n  //   };\n  //   this.realtimePlotOptions.vAxis = {\n  //     title: 'Y position (px)',\n  //     viewWindow: {\n  //       min: 0,\n  //       max: data.ViewportPixels[1] - data.offsettop,\n  //     },\n  //   };\n  //   let numCol = this.realtimeDataTable.getNumberOfColumns();\n  //   this.generateAndAddRowData(this.realtimeDataTable, numCol, {\n  //     0: 0,\n  //     [numCol - 2]: 0,\n  //   });\n  //   let numRows = this.realtimeDataTable.getNumberOfRows();\n\n  //   this.realtimePlotConfig = {\n  //     chartType: 'ComboChart',\n  //     containerId: 'realtime-plot',\n  //     options: this.realtimePlotOptions,\n  //   };\n  //   this.realtimePlot = new google.visualization.ChartWrapper(\n  //     this.realtimePlotConfig\n  //   );\n  //   this.realtimePlot.setDataTable(this.realtimeDataTable);\n  //   window.addEventListener('data_arrived', (evt: CustomEventInit) => {\n  //     if (idx % 2 == 0) {\n  //       this.realtimeDataTable.setValue(\n  //         numRows - 1,\n  //         0,\n  //         Math.floor(evt.detail.x)\n  //       );\n  //       this.realtimeDataTable.setValue(\n  //         numRows - 1,\n  //         numCol - 2,\n  //         Math.floor(evt.detail.y)\n  //       );\n  //       this.realtimePlot.draw();\n  //     }\n  //   });\n  // }\n\n  private drawStaticElements(\n    cvs: HTMLCanvasElement,\n    ctx: CanvasRenderingContext2D | null,\n    data: LiveplotDataType,\n    evt: CustomEventInit\n  ) {\n    if (ctx) {\n      ctx.fillStyle = 'gray';\n      ctx.fillRect(\n        0,\n        0,\n        data.workspace[2] * data.CanvasRatio,\n        data.ViewportPixels[1] - data.offsettop\n      );\n\n      for (let idx in evt.detail.boundingBoxes) {\n        let width =\n          evt.detail.boundingBoxes[idx]['x_1'] -\n          evt.detail.boundingBoxes[idx]['x_0'];\n        let height =\n          evt.detail.boundingBoxes[idx]['y_1'] -\n          evt.detail.boundingBoxes[idx]['y_0'];\n        ctx.beginPath();\n        ctx.rect(\n          _.floor(evt.detail.boundingBoxes[idx]['x_0']),\n          _.floor(cvs.height - evt.detail.boundingBoxes[idx]['y_0']),\n          width,\n          -height\n        );\n        ctx.stroke();\n      }\n    }\n  }\n\n  private drawRealtimePlot2(data: LiveplotDataType) {\n    let cvs = document.querySelector('#realtime-canvas') as HTMLCanvasElement;\n    cvs.width = data.workspace[2] * data.CanvasRatio;\n    cvs.height = data.ViewportPixels[1] - data.offsettop;\n    let ctx = cvs.getContext('2d') as CanvasRenderingContext2D;\n    const longerAxis = cvs.width > cvs.height ? cvs.width : cvs.height;\n\n    // const realtimeOnData =\n    window.addEventListener('data_arrived', (evt: CustomEventInit) => {\n      console.log('LONGER AXIS:', longerAxis);\n      if (evt.detail.meta == 2) {\n        this.drawStaticElements(cvs, ctx, data, evt);\n      }\n\n      if (evt.detail.meta == 1 || evt.detail.meta == 0) {\n        const x = _.floor(evt.detail.x);\n        const y = _.floor(cvs.height - evt.detail.y);\n        console.log('X:', x, 'Y:', y);\n        const xQuantity = x - this.prevCoord.x;\n        const xSquared = Math.pow(xQuantity, 2);\n        const yQuantity = y - this.prevCoord.y;\n        const ySquared = Math.pow(yQuantity, 2);\n        const dist = Math.sqrt(xSquared + ySquared);\n        console.log('DIST:', dist);\n        console.log('xQuantity:', xQuantity, 'yQuantity:', yQuantity);\n        console.log('xSquared:', xSquared, 'ySquared:', ySquared);\n        console.log(\n          'prevCoordX:',\n          this.prevCoord.x,\n          'prevCoordY:',\n          this.prevCoord.y\n        );\n\n        if (dist > longerAxis * 0.015) {\n          if (this.prevColorIdx == 14) {\n            this.prevColorIdx = 0;\n          } else {\n            this.prevColorIdx++;\n          }\n        }\n\n        ctx.fillStyle = rtColorMap[this.prevColorIdx];\n        ctx?.beginPath();\n        ctx?.arc(x, y, 2, 0, Math.PI * 2, true);\n        ctx?.fill();\n\n        this.prevCoord.x = x;\n        this.prevCoord.y = y;\n      }\n    });\n  }\n\n  private drawScreenPlot(data: LiveplotDataType, screenActive: boolean) {\n    this.screenPlotOptions.series = [];\n    for (let i = 0; i < this.xyPosDataTable.getNumberOfColumns(); i++) {\n      if (this.xyPosDataTable.getColumnLabel(i) == 'Fixation') {\n        this.screenPlotOptions.series[i - 1] = { type: 'line', color: 'gray' };\n      } else if (this.xyPosDataTable.getColumnLabel(i) == 'Sample') {\n        this.screenPlotOptions.series[i - 1] = { type: 'line', color: 'black' };\n      } else if (this.xyPosDataTable.getColumnLabel(i) == 'Same') {\n        this.screenPlotOptions.series[i - 1] = { type: 'line', color: 'green' };\n      } else if (this.xyPosDataTable.getColumnLabel(i) == 'Different') {\n        this.screenPlotOptions.series[i - 1] = { type: 'line', color: 'red' };\n      } else if (this.xyPosDataTable.getColumnLabel(i) == 'Fix_Reward') {\n        this.screenPlotOptions.series[i - 1] = { color: 'blue' };\n      } else if (this.xyPosDataTable.getColumnLabel(i) == 'Fix_Punish') {\n        this.screenPlotOptions.series[i - 1] = { color: 'red' };\n      } else if (this.xyPosDataTable.getColumnLabel(i) == 'Target_Reward') {\n        this.screenPlotOptions.series[i - 1] = { color: 'green' };\n      } else if (this.xyPosDataTable.getColumnLabel(i) == 'Target_Punish') {\n        this.screenPlotOptions.series[i - 1] = { color: 'black' };\n      } else if (this.xyPosDataTable.getColumnLabel(i).includes('Test')) {\n        this.screenPlotOptions.series[i - 1] = { type: 'line', color: 'black' };\n      }\n    }\n\n    this.screenPlotOptions.height = data.ViewportPixels[1];\n    this.screenPlotOptions.width = data.ViewportPixels[0];\n    this.screenPlotOptions.hAxis = {\n      title: 'X position (px)',\n      viewWindow: {\n        min: 0,\n        max: data.ViewportPixels[0],\n      },\n    };\n    this.screenPlotOptions.vAxis = {\n      title: 'Y position (px)',\n      viewWindow: {\n        min: 0,\n        max: data.ViewportPixels[1],\n      },\n    };\n    if (!this.realtimePlotActive) {\n      this.screenPlot.draw(this.xyPosDataTable, this.screenPlotOptions);\n    }\n  }\n\n  private formatDate(\n    data: google.visualization.DataTable,\n    colIdx: number\n  ): void {\n    let formatter = new google.visualization.DateFormat({\n      pattern: 'h aa',\n    });\n    formatter.format(data, colIdx);\n  }\n\n  private formatNumber(data: google.visualization.DataTable, colIdx: number) {\n    let formatter = new google.visualization.NumberFormat({\n      fractionDigits: 2,\n    });\n    formatter.format(data, colIdx);\n  }\n\n  private formatColor(data: google.visualization.DataTable, colIdx: number) {\n    let formatter = new google.visualization.ColorFormat();\n    let dx = 1 / (colorMapJet.length - 1);\n    for (let i = 0; i < colorMapJet.length; i++) {\n      formatter.addRange(i * dx, (i + 1) * dx, 'gray', colorMapJet[i]);\n    }\n    formatter.format(data, colIdx);\n  }\n}\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/storage';\nimport 'firebase/database';\nimport JSONEditor from 'jsoneditor';\nimport _ from 'lodash';\n// import 'jsoneditor/dist/jsoneditor.css'\n// import './jsoneditor.css';\nimport { Utils } from './utils';\nimport { Charts } from './charts';\nimport { FileType, LiveplotDataType } from './types';\n\nconst storage = firebase.storage();\nconst storageRef = storage.ref();\nconst rtdb = firebase.database();\n\nconst DATA_PATH = 'mkturkfiles/datafiles/';\nconst DATA_REF = storageRef.child(DATA_PATH);\nconst PARAM_PATH = 'mkturkfiles/parameterfiles/subjects/';\nconst PARAM_REF = storageRef.child(PARAM_PATH);\nconst AGENTS_REF = rtdb.ref('agents/');\nconst utils = new Utils();\n\nexport class Liveplot {\n  public wkr: Worker;\n  public file: FileType;\n  public elemObjs: any;\n  public editor: JSONEditor;\n  public charts: Charts;\n  public streamActive: boolean;\n  public agentClientRef: firebase.database.Reference;\n\n  constructor(elemObj: any) {\n    this.elemObjs = elemObj;\n    this.file = {\n      path: DATA_PATH,\n      list: [],\n      name: '',\n      ver: null,\n      date: null,\n      dataChanged: false,\n      fileChanged: false,\n    };\n    this.charts = new Charts(elemObj);\n    this.streamActive = false;\n    this.requestRealtimeBtnAction();\n    this.onDisconnectAction();\n  }\n\n  public fileSelectionChangedListener(elem: HTMLSelectElement) {\n    elem.addEventListener('input', (evt: Event) => {\n      evt.stopPropagation();\n      evt.preventDefault();\n      if (this.streamActive) {\n        let agent = this.file.data?.Agent!;\n        rtdb.ref(`data/${agent}`).off();\n        this.agentClientRef.remove((err) => {\n          if (err) {\n            console.error(`Error Removing agentClientRef: ${err}`);\n          }\n        });\n        this.streamActive = false;\n      }\n      this.file.name = this.file.list[parseInt(elem.value)].fullpath;\n      this.file.fileChanged = true;\n    });\n  }\n\n  public onDisconnectAction() {\n    window.addEventListener('unload', (evt: Event) => {\n      this.agentClientRef.onDisconnect().remove();\n    });\n  }\n\n  public requestRealtimeBtnAction() {\n    let realtimeBtn = this.elemObjs.realtimeBtn;\n    realtimeBtn.addEventListener('click', async (evt: Event) => {\n      evt.stopPropagation();\n      evt.preventDefault();\n      let agent = this.file.data?.Agent!;\n      if (this.streamActive) {\n        realtimeBtn.innerHTML = 'Request Realtime Stream';\n        rtdb.ref(`data/${agent}`).off();\n        this.agentClientRef.remove((err) => {\n          if (err) {\n            console.error(`Error Removing agentClientRef: ${err}`);\n          }\n        });\n        rtdb.ref(`data/${agent}`).off();\n        this.streamActive = false;\n      } else {\n        realtimeBtn.innerHTML = 'Deactivate Realtime Stream';\n        let agentClientKey = rtdb.ref(`agents/${agent}`).push().key;\n        this.agentClientRef = rtdb.ref(`agents/${agent}/${agentClientKey}`);\n        if (_.isString(agentClientKey)) {\n          rtdb.ref(`agents/${agent}`).update({\n            [agentClientKey]: true,\n          });\n        }\n        rtdb.ref(`data/${agent}`).on('value', (snap) => {\n          let event = new CustomEvent('data_arrived', { detail: snap.val() });\n          window.dispatchEvent(event);\n        });\n        this.streamActive = true;\n      }\n    });\n  }\n\n  public async populateFileList(elem: HTMLSelectElement) {\n    try {\n      let fileList = await utils.getFileList(this.file.path);\n\n      fileList.sort((a: any, b: any) => {\n        let nameA = a.name.toUpperCase();\n        let nameB = b.name.toUpperCase();\n\n        if (nameA > nameB) {\n          return -1;\n        }\n\n        if (nameA < nameB) {\n          return 1;\n        }\n\n        return 0;\n      });\n\n      this.file.list = fileList;\n\n      for (let i = 0; i < fileList.length; i++) {\n        let opt = document.createElement('option');\n        opt.value = i.toString();\n        opt.innerHTML = fileList[i].name;\n        elem.appendChild(opt);\n      }\n\n      this.file.name = this.file.list[0].fullpath;\n      this.file.fileChanged = true;\n      let rawStorageFile = await utils.getStorageFile(this.file.name);\n      // console.log('rawFile', rawStorageFile);\n\n      this.processData(rawStorageFile);\n    } catch (error) {\n      console.error('ERROR #file-list:', error);\n    }\n  }\n\n  private flattenData(data: any) {\n    let tmp: any = {};\n\n    for (let outerKey in data) {\n      if (data.hasOwnProperty(outerKey)) {\n        for (let innerKey in data[outerKey]) {\n          if (data[outerKey].hasOwnProperty(innerKey)) {\n            tmp[innerKey] = data[outerKey][innerKey];\n          }\n        }\n      }\n    }\n\n    return tmp;\n  }\n\n  private async processData(data: any) {\n    console.time('this.flattenData');\n    this.file.data = this.flattenData(data);\n    console.timeEnd('this.flattenData');\n    this.loadDataToEditor(this.file.data);\n    // console.log(this.file.data);\n\n    let metadata = await utils.getStorageFileMetadata(this.file.name);\n    console.log('Success! Loaded File Size:', metadata.size / 1000, 'KB');\n    this.file.ver = metadata.generation;\n    this.file.dateSaved = new Date(metadata.updated);\n    console.log(this.file.dateSaved);\n\n    if (this.file.fileChanged) {\n      this.charts.initializeChartData(this.file, {\n        streamActive: this.streamActive,\n      });\n      this.checkFileStatus();\n      this.file.fileChanged = false;\n      this.file.dataChanged = false;\n    } else if (this.file.dataChanged) {\n      this.charts.updatePlots(this.file, { streamActive: this.streamActive });\n      this.file.dataChanged = false;\n      this.checkFileStatus();\n    }\n  }\n\n  public setupEditor(elem: HTMLDivElement) {\n    this.editor = new JSONEditor(elem);\n  }\n\n  private loadDataToEditor(data: any) {\n    if (this.file.fileChanged) {\n      this.editor.set(data);\n    } else {\n      this.editor.update(data);\n    }\n  }\n\n  private async checkFileStatus() {\n    try {\n      let metadata = await utils.getStorageFileMetadata(this.file.name);\n\n      if (this.file.ver != metadata.generation) {\n        this.file.ver = metadata.generation;\n        this.file.dateSaved = new Date(metadata.updated);\n        console.log(this.file.dateSaved);\n        this.file.dataChanged = true;\n        console.log('File was updated ver=' + this.file.ver);\n      } else {\n        this.file.dataChanged = false;\n      }\n\n      if (this.file.fileChanged == true || this.file.dataChanged == true) {\n        let rawStorageFile = await utils.getStorageFile(this.file.name);\n        // console.log('rawFile', rawStorageFile);\n        this.processData(rawStorageFile);\n      } else {\n        setTimeout(() => {\n          this.checkFileStatus();\n        }, 1000);\n      }\n    } catch (error) {\n      console.error('checkFileStatus Error:', error);\n    }\n    return false; // why needed\n  }\n}\n","import './styles.css'\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA0fbv2VqE-AfF6V_nxSSXCEqaTlBlZnTI\",\n  authDomain: \"sandbox-ce2c5.firebaseapp.com\",\n  databaseURL: \"https://sandbox-ce2c5.firebaseio.com\",\n  projectId: \"sandbox-ce2c5\",\n  storageBucket: \"sandbox-ce2c5.appspot.com\",\n  messagingSenderId: \"1003719887944\",\n  clientId: \"1003719887944-rlc06cjecqrp9fgvmvo56vqop1otm9ht.apps.googleusercontent.com\"\n};\nfirebase.initializeApp(firebaseConfig);\n\nimport { Liveplot } from './liveplot';\n\nlet fileListSelector = (\n  document.querySelector('#file-list') as HTMLSelectElement\n);\n\nlet editorDiv = (\n  document.querySelector('#editor') as HTMLDivElement\n);\n\nlet elemObj = {\n  perfDiv: document.querySelector('#performance-dashboard') as HTMLDivElement,\n  perfPlot: document.querySelector('#performance-plot') as HTMLDivElement,\n  perfFilter: document.querySelector('#performance-filter') as HTMLDivElement,\n  trialDiv: document.querySelector('#trial-dashboard') as HTMLDivElement,\n  trialPlot: document.querySelector('#trial-plot') as HTMLDivElement,\n  trialFilter: document.querySelector('#trial-filter') as HTMLDivElement,\n  healthDiv: document.querySelector('#health-dashboard') as HTMLDivElement,\n  healthPlot: document.querySelector('#health-plot') as HTMLDivElement,\n  healthFilter: document.querySelector('#health-filter') as HTMLDivElement,\n  screenPlot: document.querySelector('#screen-plot') as HTMLDivElement,\n  // realtimePlot: document.querySelector('#realtime-plot') as HTMLDivElement,\n  rxnPlot: document.querySelector('#reaction-plot') as HTMLDivElement,\n  choicePlot: document.querySelector('#choice-plot') as HTMLDivElement,\n  objPerfPlot: document.querySelector('#obj-perf-plot') as HTMLDivElement,\n  rewardPlot: document.querySelector('#reward-plot') as HTMLDivElement,\n  \n  perfVitals: document.querySelector('#performance-vitals') as HTMLSpanElement,\n  rfidVitals: document.querySelector('#rfid-vitals') as HTMLSpanElement,\n  batteryVitals: document.querySelector('#battery-vitals') as HTMLSpanElement,\n  trialVitals: document.querySelector('#trial-vitals') as HTMLSpanElement,\n  fixStdev: document.querySelector('#fixation-stdev') as HTMLSpanElement,\n  tarZeroStdev: document.querySelector('#target0-stdev') as HTMLSpanElement,\n  tarOneStdev: document.querySelector('#target1-stdev') as HTMLSpanElement,\n  sdTextDiv: document.querySelector('#touch-sd-text') as HTMLDivElement,\n  realtimeBtn: document.querySelector('#request-realtime') as HTMLButtonElement,\n};\n\nconst lp = new Liveplot(elemObj);\nlp.setupEditor(editorDiv);\nlp.fileSelectionChangedListener(fileListSelector);\nlp.populateFileList(fileListSelector);\n\n\n\n\n\n\n\n// fileListSelector.addEventListener('change', evt => {\n//   evt.preventDefault();\n//   evt.stopPropagation();\n//   console.log('New File!');\n//   file.name = file.fileList[parseInt(fileListSelector.value)].fullpath;\n//   file.fileChanged = true;\n//   console.log('file name:', file.name);\n//   console.log('file path', file.path);\n// });\n\n// let file: any = {\n//   path: DATA_PATH,\n//   list: [],\n//   fileList: [],\n//   name: '',\n//   data: null,\n//   ver: null,\n//   date: null,\n//   dateChanged: false,\n//   fileChanged: false\n// };\n\n// console.log('hello hector');\n\n\n// async function populateDropdownMenu() {\n//   try {\n//     let fileList = await utils.getFileList(file.path);\n    \n\n//     fileList.sort((a: any, b: any) => {\n//       let nameA = a.name.toUpperCase();\n//       let nameB = b.name.toUpperCase();\n\n//       if (nameA > nameB) {\n//         return -1;\n//       }\n\n//       if (nameA < nameB) {\n//         return 1;\n//       }\n\n//       return 0;\n//     });\n\n//     file.fileList = fileList;\n    \n\n//     for (let i = 0; i < fileList.length; i++) {\n//       let opt = document.createElement('option');\n//       opt.value = i.toString();\n//       opt.innerHTML = fileList[i].name;\n//       fileListSelector.appendChild(opt);\n//     }\n    \n//     file.name = file.fileList[0].fullpath;\n//     file.fileChanged = true;\n  \n//   } catch (error) {\n//     console.error('ERROR #file-list:', error);\n//   }\n// }\n\n// populateDropdownMenu();\n\n\n// async function loadAndRenderEditor(filePath: string) {\n//   let dataFile = utils.getStorageFile(filePath);\n// }\n\nlet provider = new firebase.auth.GoogleAuthProvider();\nprovider.addScope('https://www.googleapis.com/auth/contacts.readonly');\nfirebase.auth().getRedirectResult().then(function(result) {\n  if (result.user) {\n    // User just signed in. you can get the result.credential.\n\tconsole.log('Sign-In Redirect Result, USER ' + result.user.email + ' is signed in')\n  }\n  else if (firebase.auth().currentUser) {\n    // User already signed in.\n\tconsole.log('Sign-In Redirect Result, USER is signed in')\n  }\n  else {\n    // No user signed in, update your UI, show the redirect sign-in screen.\n\tfirebase.auth().signInWithRedirect(provider)\n  }\n});","import firebase from 'firebase/app';\nimport 'firebase/storage';\nimport 'firebase/database';\n\nconst storage = firebase.storage();\nconst storageRef = storage.ref();\n\nexport class Utils {\n  constructor() {}\n\n  public async getFileList(path: string, ext?: string) {\n    let fileList = await storageRef.child(path).listAll();\n    /* only keep files within the last 2 years*/\n    let year = new Date().getFullYear();\n    let files: any = [];\n\n    for (let item of fileList.prefixes) {\n      let subFileList = (\n        await this.getFileList(path + item.name + '/', ext)\n      );\n      files = [...files, ...subFileList];\n    }\n\n    for (let i = 0; i < fileList.items.length; i++) {\n      if (typeof(ext) == 'string') {\n        if (fileList.items[i].name.endsWith(ext)) { // if file extension is correct\n          files.push({\n            fullpath: fileList.items[i].fullPath,\n            name: fileList.items[i].name\n          });\n        }\n      } else if (parseInt(fileList.items[i].name.slice(0, 4)) >= year - 1) {\n        files.push({\n          fullpath: fileList.items[i].fullPath,\n          name: fileList.items[i].name\n        });\n      }\n    }\n\n    return files;\n  }\n\n  public async getStorageFile(path: string) {\n    let fileRef = storageRef.child(path);\n    // console.log('fileRef:', fileRef);\n    let file = await storageRef.child(path).getDownloadURL().then(async (url: string) => {\n      let response = await fetch(url);\n      return response.json();\n    }).catch(e => {\n      console.error('Error Getting URL:', e);\n    });\n    // console.log('file:', file);\n    return file;\n  }\n\n  public async getStorageFileMetadata(path: string) {\n    let fileRef = storageRef.child(path);\n    let metadata = await fileRef.getMetadata();\n    return metadata;\n  }\n\n  public smooth(data: any[], n: number) {\n    let smoothedData = [];\n    for (let i = 0; i < data.length; i++) {\n      if (i < n - 1) {\n        let tmp = data.slice(0, i + 1);\n        smoothedData[i] = tmp.reduce((a: any, b: any) => {\n          return a + b;\n        });\n        smoothedData[i] /= (i + 1);\n      } else {\n        let tmp = data.slice(i - n + 1, i + 1);\n        smoothedData[i] = tmp.reduce((a: number, b: number) => {\n          return a + b;\n        });\n        smoothedData[i] /= n;\n      }\n    }\n    return smoothedData;\n  }\n\n  public calcDistance(a: number, b: number) {\n    return Math.pow(Math.abs(a - b), 2);\n  }\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkliveplot\"] = self[\"webpackChunkliveplot\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\n__webpack_require__.O(undefined, [941], () => (__webpack_require__(519)))\nvar __webpack_exports__ = __webpack_require__.O(undefined, [941], () => (__webpack_require__(593)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","colorMapJet","rtColorMap","utils","Utils","constructor","elemObj","this","elemObject","realtimePlotActive","setupCharts","vitals","subject","pctCorrect","trials","time","batteryLeft","batteryUsed","rewardEstimate","automator","automatorStage","automatorStageName","numReward","rfidTag","rfidTime","tagCount","prevCoord","x","y","prevColorIdx","setupDataTables","perfDataTable","google","visualization","DataTable","healthDataTable","cumulDataTable","xyPosDataTable","rxnTimeDataTable","rewardDataTable","choiceDataTable","objPerfDataTable","realtimeDataTable","rtData","async","charts","load","packages","setupChartOptions","perfDashboard","Dashboard","perfDiv","perfPlot","ChartWrapper","perfPlotConfig","perfFilter","ControlWrapper","perfFilterConfig","trialDashboard","trialDiv","trialPlot","trialPlotConfig","trialFilter","trialFilterConfig","healthDashboard","healthDiv","healthPlot","healthPlotConfig","healthFilter","healthFilterConfig","bind","screenPlot","ComboChart","rxnPlot","Histogram","rewardPlot","ColumnChart","choicePlot","objPerfPlot","perfPlotOptions","width","clientWidth","height","clientHeight","hAxis","title","vAxis","viewWindow","min","max","animation","duration","easing","startup","series","color","chartType","containerId","options","perfFilterOptions","filterColumnLabel","ui","chartOptions","smooth","baselineColor","chartView","columns","minRangeSize","controlType","state","range","start","end","trialPlotOptions","areaOpacity","vAxes","targetAxisIndex","trialFilterOptions","healthPlotOptions","healthFilterOptions","screenPlotOptions","seriesType","pointSize","rxnPlotOptions","legend","position","rewardPlotOptions","minValue","maxValue","choicePlotOptions","objPerfPlotOptions","initializeChartData","file","plotOptions","removeRows","getNumberOfRows","removeColumns","getNumberOfColumns","realtimeRowDataAdded","addColumn","data","SameDifferent","i","TestGridIndex","length","type","role","updatePlots","fileData","isUndefined","console","log","loadVitals","loadVitalsText","loadPerformanceData","loadHealthData","loadObjPerfData","loadChoiceData","loadRewardData","drawPerformancePlot","drawTrialPlot","drawHealthPlot","drawObjPerfPlot","drawRxnTimePlot","drawChoicePlot","drawRewardPlot","loadTouchSDText","streamActive","drawScreenPlot","drawRealtimePlot2","Subject","Response","startTime","StartTime","round","toNumber","last","RFIDTag","size","Date","toLocaleTimeString","Automator","CurrentAutomatorStage","CurrentAutomatorStageName","battery","Battery","numCorrect","CorrectItem","NReward","reduce","a","b","RewardPer1000Trials","perfVitals","innerHTML","rfidVitals","batteryVitals","trialVitals","dateSaved","Math","stdevFix","stdevTest","err","error","xPos","yPos","xData","yData","yDataSmall","yDataLarge","numTotal","numRFID","touchevent","rt","RewardStage","FixationXYT","addRows","FixationTouchEvent","NRSVP","SampleFixationXYT","SampleStartTime","SampleFixationTouchEvent","ResponseXYT","ChoiceTimeOut","fixX","fixY","sampleX","sampleY","numColumnXYPos","sampleWidth","getSampleWidth","sampleHeight","testWidth","getTestWidth","testHeight","fixationWidth","getFixationWidth","fixationHeight","choiceWidth","getChoiceWidth","choiceHeight","numDisplayElems","maxFixationGridIndex","FixationGridIndex","isNumber","XGridCenter","ViewportPixels","YGridCenter","offsettop","generateAndAddRowData","maxSampleGridIndex","SampleGridIndex","testX","testY","push","tmp","choiceX","choiceY","ChoiceGridIndex","timeEnd","fixXPos","fixYPos","testXPos","testYPos","numTarget","yDataIndex","arr","Array","testXPosArr","testYPosArr","j","meanFixXPos","mean","meanFixYPos","distFixXPos","map","pow","abs","distFixYPos","idx","sqrt","allTestXPos","filter","meanTestXPos","distTestXPos","allTestYPos","meanTestYPos","distTestYPos","numTrials","numReads","fill","timeFix","t","setTime","getTime","formatDate","target","numColumns","has","SampleScenes","IMAGES","imageidx","isArray","sizeInches","maxSizeInches","ViewportPPI","firstKey","findKey","OBJECTS","isString","TestScenes","SampleFixationSizeInches","FixationUsesSample","FixationSizeInches","ChoiceSizeInches","lenSampleObj","sampleObj","NTrialsPerBagBlock","ImageBagsSample","split","addRow","NDiffObjPerf","NDiffObj","Sample","SampleBagIdx","setValue","possibleResp","ObjectGridIndex","objGridIndex","cloneDeep","sort","allind","indexOf","NDiffChoice","NAllChoice","nrewardArr","NRewardMax","forEach","elem","toString","lastIdx","Object","keys","TSequenceActualClip","dt","dt2","sampleCmdInterval","sampleCmdOffInterval","eyeTrackerSampleInterval","TSequenceDesiredClip","SampleCommandReturnTime","undefined","SampleCommandOffReturnTime","EndTime","EyetrackerSampleInterval","numRows","nTrials","perfFilterState","getState","dataChanged","fileChanged","dTrials","dSlider","setOptions","setState","draw","healthFilterState","trialFilterState","tmin","getColumnRange","tmax","drawStaticElements","cvs","ctx","evt","fillStyle","fillRect","workspace","CanvasRatio","detail","boundingBoxes","beginPath","rect","floor","stroke","document","querySelector","getContext","longerAxis","window","addEventListener","meta","xQuantity","xSquared","yQuantity","ySquared","dist","arc","PI","screenActive","getColumnLabel","includes","colIdx","DateFormat","pattern","format","formatNumber","NumberFormat","fractionDigits","formatColor","formatter","ColorFormat","dx","addRange","storageRef","storage","ref","rtdb","database","DATA_PATH","child","elemObjs","path","list","name","ver","date","Charts","requestRealtimeBtnAction","onDisconnectAction","fileSelectionChangedListener","stopPropagation","preventDefault","agent","Agent","off","agentClientRef","remove","parseInt","value","fullpath","onDisconnect","realtimeBtn","agentClientKey","key","update","on","snap","event","CustomEvent","val","dispatchEvent","fileList","getFileList","nameA","toUpperCase","nameB","opt","createElement","appendChild","rawStorageFile","getStorageFile","processData","flattenData","outerKey","hasOwnProperty","innerKey","loadDataToEditor","metadata","getStorageFileMetadata","generation","updated","checkFileStatus","setupEditor","editor","set","setTimeout","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","clientId","fileListSelector","editorDiv","fixStdev","tarZeroStdev","tarOneStdev","sdTextDiv","lp","Liveplot","populateFileList","provider","auth","GoogleAuthProvider","addScope","getRedirectResult","then","result","user","email","currentUser","signInWithRedirect","ext","listAll","year","getFullYear","files","item","prefixes","subFileList","items","endsWith","fullPath","slice","getDownloadURL","url","fetch","json","catch","e","fileRef","getMetadata","n","smoothedData","calcDistance","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","id","loaded","__webpack_modules__","call","m","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","splice","r","d","definition","o","defineProperty","enumerable","get","g","globalThis","Function","hmd","create","children","Error","obj","prop","prototype","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}